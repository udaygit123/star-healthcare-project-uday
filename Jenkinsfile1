pipeline {
  agent any
  tools {
     maven 'M2_HOME'
      }
    stages {
        stage('checkout'){
           steps {
             echo 'checkout the code from GitRepo'
             git branch: 'master', url: 'https://github.com/udaygit123/Star-agile-MediCure-Project.git'
                    }
            }


     stage('Build the  Application'){
               steps {
                   echo "Packaging Application"
                   sh 'mvn clean package'
                    }
                 }
		 
		 
    stage('Publish HTML Reports'){
       steps {
          publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '/var/lib/jenkins/workspace/Health-care-Project/target/surefire-reports', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                    }
            }
     stage('Docker Image Creation'){
        steps {
           sh 'docker build -t udaydocker123/medicureproject:latest .'
                     }
                 }
    stage('Push Image to DockerHub'){
       steps {
                  withCredentials([usernamePassword(credentialsId: 'Dockerhub', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
         sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}"
         sh 'docker push udaydocker123/medicureproject:latest'


	            }
                }
           }
      stage ('Configure Test-server2 with Terraform, Ansible and create minikube then Deploying'){
            steps {
                dir('terraform_setup'){
                sh 'sudo chmod 0600 JenkinSerP1key.pem'
                sh 'terraform init'
                sh 'terraform validate'
                sh 'terraform apply --auto-approve'
		
                }
            }
	  }
	  tage('deploy to kubernates') {
            steps{
           sshagent(sshagent(['ubuntu']) {
   

          sh "scp -o StrictHostKeyChecking=no Deployment.yml ubuntu@ip-54.84.82.243:/home/ubuntu"

     script{
      try{
      sh "ssh ubuntu@ip-54.84.82.243 kubectl apply -f ."
      }catch(error)
    {
     sh "ssh ubuntu@ip-54.84.82.243 kubectl create -f ."
     }
     }
     }
     
     }
    }
	  
}
	 
	
